# Actions workflow

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # AWS ECR login
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Docher build & push phono/api to ECR
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: phono/api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY

    # AWS ECR logout
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}

    # Kubectl 1.18.2 install
    - uses: azure/setup-kubectl@v1

    # Kubectl configuration
    - name: Kubectl configuration
      shell: bash
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        mkdir .kube
        echo "$KUBECONFIG:" > .kube/config
        kubectl version
        kubectl cluster-info
    
    # Helm 2.16.1 install
    - uses: azure/setup-helm@v1
      with:
        version: '2.16.1' # default is latest stable

    # Deploy phono-api helm chart
    - name: Deploy phono-api
      shell: bash
      run: |
         helm ls
    #    helm upgrade -i --debug phono-ingress charts/ingress/ --namespace phono -f charts/ingress/secrets/values.yaml
    #    helm upgrade -i --debug phono-api charts/api/ --namespace phono -f charts/api/secrets/values.yaml

